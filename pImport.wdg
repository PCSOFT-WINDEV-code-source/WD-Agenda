#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : pImport
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1b01618800760e56
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1-
      
      constant
      	depuisOutlook = 1
      	depuisGoogle  = 2
      	depuisNotes   = 3
      	
      	cftAppliqueModifications 		= 1
      	cftConserveDonnéesActuelles		= -1
      	cftAnnulerImport				= 0
      	cftRestaurerEvénement			= 10
      	cftSupprimeEvénement			= 11
      	cftModeModification				= 0xff
      	cftModeSuppression				= 0x0f
      FIN
     type : 720896
  procedures :
   -
     name : OutlookImporteAgenda
     internal_properties : CAAAAAgAAACuvfIXm0HgJ28GKlcyh/EE/59yKGOpRn5WckGbovzb70OR05u6ddRGXW77QBIxY/4ZSMyeTo8lJfoJ4mT1874WlQ7DYGvLczhB+wVr9OFSWJD6Zuwi0t0mwHfZ6kg1U9XWScYhpAtmkbwAcgJyXm/HEyBeaMA6tpiUok0DiQZj2zK4zlirlIiKGTJU6b91oXcb/Akx0s36akRyyhsxGjYdMGyh6mwnI4dYmgls8RImmMJmZJsE3U7jQKT0DFnDMn+DnaE=
     procedure_id : 1945943763636917919
     type_code : 15
     code : |1-
      // Résumé : Importe les événements d'un agenda Outlook
      PROCEDURE OutlookImporteAgenda(local sProfil est une chaine, local nIDAgenda est un entier, local bInfo est un booléen = vrai)
      
      	nIDSession 		est un entier
      	nNbEvénements	est un entier
      	sLibEvénement	est une chaine
      	nRetour			est un entier
      	sIDRendezVous	est une chaine
      
      	sablier(vrai)
      
      	// Ouvre une session
      	nIDSession = OutlookOuvreSession(sProfil)
      
      	// Parcourt les rendez-vous
      	si RendezVousPremier(nIDSession) ALORS
      
      		tantque mRendezVous.EnDehors = faux 
      			
      			sIDRendezVous = mRendezVous.ID
      			
      			// Vérifie si on a déjà importé cet événement
      			HlitRecherchePremier(AgendaEvénement, identifiantoutlook, sIDRendezVous)
      			si htrouve(AgendaEvénement) ALORS
      				
      				// On vérifie si un conflit de modification existe
      				nRetour = DéclencheConflitExtérieur(depuisOutlook)
      				
      				// On annule l'import
      				// L'événement sera reproposé à la prochaine synchronisation
      				SI nRetour = cftAnnulerImport ALORS
      					
      					// Rendez-vous suivant, sans modification
      					RendezVousSuivant(nIDSession)		
      					CONTINUER
      				sinon
      					
      					// On conserve les données présentes dans la base
      					SI nRetour = cftConserveDonnéesActuelles ALORS
      						
      						// mRendezVous a été modifié par la fenêtre FEN_CONFLIT						
      						// Enregistre les modifications apportées dans Outlook
      						RendezVousModifie(nIDSession)	
      					sinon
      						// Applique les nouvelles données présentes dans Outlook
      					FIN
      					
      					// On doit modifier l'événement
      					AgendaEvénement.Invités = ""
      				FIN
      			sinon
      				
      				// RAZ des données
      				HRAZ(AgendaEvénement)
      			FIN
      			
      			// Importe les données de l'événement
      			AgendaEvénement.Auteur 				= ""
      			AgendaEvénement.Contenu				= mrendezvous.Notes
      			AgendaEvénement.DateDébut			= mrendezvous.DateDébut
      			AgendaEvénement.DateFin				= mrendezvous.DateFin
      			AgendaEvénement.IDAgendaOutlook		= nIDAgenda
      			AgendaEvénement.Lieux				= mRendezVous.Lieu
      			AgendaEvénement.Titre				= mRendezVous.Objet
      			AgendaEvénement.JournéeEntière		= mRendezVous.JournéeEntière
      			AgendaEvénement.IDCatégorie			= CatégorieImporte(mRendezVous.Catégorie)
      			AgendaEvénement.IdentifiantOutlook	= sIDRendezVous
      									
      			// Participants
      			pour i = 1 _a_ mrendezvous.NbParticipant
      				AgendaEvénement.Invités += [rc] + Remplace(remplace(mrendezvous.Participant[i], "<", tab), ">", "")
      			FIN
      			
      			// Enregistre l'événement
      			si AgendaEvénement..NouvelEnregistrement alors
      				hajoute(AgendaEvénement)				
      			sinon
      				HDésactiveTrigger()
      				HModifie(AgendaEvénement)
      				HActiveTrigger()
      			fin
      			
      			// Rendez-vous suivant
      			RendezVousSuivant(nIDSession)		
      		fin		
      	FIN
      	
      	// Fin de la session
      	FermeSession(nIDSession)	
      	
      	Sablier(faux)
      	
      	si bInfo alors
      		
      		// Si aucun événement n'a été importé
      		si nNbEvénements = 0 ALORS
      			Avertissement("Ce profil ne contient aucun événement")
      		sinon
      			sLibEvénement = (nNbEvénements = 1 ? "événement a été importé" SINON "événements ont été importés")			
      			Info("[%nNbEvénements%] [%sLibEvénement%]")
      		FIN
      	fin
      	
     type : 458752
   -
     name : CatégorieImporte
     procedure_id : 1945945215335939893
     type_code : 15
     code : |1-
      // Résumé : Crée une catégorie si nécessaire et renvoie son identifiant
      PROCEDURE CatégorieImporte(local sNom est une chaine, sLibelléCatégorie est une chaine = "", nCouleur est un entier = RVB(191, 210, 234))
      
      	si sNom = "" alors 
      		sLibelléCatégorie = ""
      		nCouleur = -1
      		renvoyer 0
      	FIN
      	
      	// Recherche si la catégorie existe
      	HLitRecherchePremier(AgendaCatégorie, Libellé, extraitchaine(sNom, 1, rc))
      	si pas htrouve(AgendaCatégorie) ALORS
      		
      		// La catégorie n'existe pas, on la crée
      		hraz(AgendaCatégorie)
      		AgendaCatégorie.Libellé = ExtraitChaîne(sNom, 1, RC)
      		
      		si HNbEnr(AgendaCatégorie) < poutils.Couleurs..Occurrence ALORS
      			AgendaCatégorie.Couleur = pOutils.Couleurs[HNbEnr(AgendaCatégorie) + 1]
      		FIN
      		
      		hajoute(AgendaCatégorie)		
      	FIN
      	
      	sLibelléCatégorie = AgendaCatégorie.Libellé
      	nCouleur		  = AgendaCatégorie.Couleur
      	
      // Renvoie l'identifiant de la catégorie
      RENVOYER AgendaCatégorie.IDAgendaCatégorie	
     type : 458752
   -
     name : GoogleImporteAgenda
     internal_properties : CAAAAAgAAABemGxTsu1VgQRtEKd20NbdYLX58uq86knwCPMzS29h11JbPiHgbzDvfsr+B1RZrGMvFdTmwp6nG1jIa3jshGxws4Bu4y3hu9yRg+vMkytIwDV8sdRd/Ir0kmE49zjAZ925qWmKLXgZdHT0TzmxsnVfgGYxDW2BH/FsVqCCSGppTfPyG52QoSPxd9JNxmQvjfPy4qGZZIKCBNVSKXONBT/9YAEu8uHjSeCKgB8FQ1LEG/DkCVBeAbwa9A==
     procedure_id : 1945951507468295266
     type_code : 15
     code : |1-
      // Résumé : Importe les événements d'un agenda Google// Traitement automatique des erreurs : afficher l'erreur, RENVOYER <aucune valeur>
      PROCEDURE GoogleImporteAgenda(UneConnexion est un gglConnexion, local sIdentifiant est une chaine, local nIDAgenda est un entier, local bInfo est un booléen = vrai)
      
      	UnAgenda 		est un gglAgenda
      	UnEvénement 	est un gglEvénement
      	nNbEvénements 	est un entier
      	sLibEvénement 	est une chaine
      	nRetour			est un entier
      	Personne 		est un gglPersonne
      	Lieu 			est un ggllieu
      		
      	Sablier(vrai)
      	
      	// Récupère l'agenda
      	UnAgenda = GglRécupèreAgenda(UneConnexion, sIdentifiant, "19700101")
      		
      	// Parcourt les événements de l'agenda
      	pour tout UnEvénement de UnAgenda.Evénement
      		
      		// Vérifie si on a déjà importé cet événement
      		HLitRecherchePremier(AgendaEvénement, IdentifiantGoogle, UnEvénement.IDentifiant)
      		SI HTrouve(AgendaEvénement) ALORS
      			
      			// On vérifie si un conflit de modification existe
      			nRetour = DéclencheConflitExtérieur(depuisGoogle, UnEvénement)
      						
      			// On annule l'import
      			// L'événement sera reproposé à la prochaine synchronisation
      			SI nRetour = cftAnnulerImport ALORS
      				
      				// Rendez-vous suivant, sans modification
      				CONTINUER
      			SINON
      				
      				// On conserve les données présentes dans la base
      				SI nRetour = cftConserveDonnéesActuelles ALORS
      					
      					// UnEvénement a été modifié par la fenêtre FEN_CONFLIT						
      					// Enregistre les modifications apportées dans Google
      					GglEcrit(UneConnexion, UnAgenda)
      				SINON
      					// Applique les nouvelles données présentes dans Google
      				FIN
      				
      				// On doit modifier l'événement
      				AgendaEvénement.Lieux 	= ""
      				AgendaEvénement.Invités = ""
      			FIN
      			
      		SINON
      			
      			// RAZ des données
      			HRAZ(AgendaEvénement)
      		FIN
      				
      		// Importe les données de l'événement
      		AgendaEvénement.IDAgendaGoogle 		= nIDAgenda		
      		AgendaEvénement.Auteur		   		= UnEvénement..Auteur..Nom + [tab] + UnEvénement..Auteur..Email
      		AgendaEvénement.Contenu		  		= UnEvénement..Contenu
      		AgendaEvénement.DateDébut		   	= UnEvénement..DateDébut
      		AgendaEvénement.DateFin		   		= UnEvénement..DateFin
      		AgendaEvénement.Titre		   		= UnEvénement..Titre
      		AgendaEvénement.IdentifiantGoogle	= UnEvénement..Identifiant
      		AgendaEvénement.JournéeEntière		= UnEvénement..JournéeEntière
      		
      		// Personnes
      		pour toute Personne de UnEvénement.Invité
      			AgendaEvénement.Invités += [rc] + Personne..Libellé + [tab] + Personne..email
      		FIN
      
      		// Lieux
      		pour tous Lieu de UnEvénement.Lieu
      			AgendaEvénement.Lieux += [rc] + Lieu..Valeur
      		FIN
      
      		// Enregistre l'événement
      		si AgendaEvénement..NouvelEnregistrement alors
      			hajoute(AgendaEvénement)
      		sinon
      			HDésactiveTrigger()
      			Hmodifie(AgendaEvénement)
      			HActiveTrigger()
      		fin
      		
      		// Incrémente le compteur
      		nNbEvénements ++
      	FIN
      	
      	sablier(faux)
      	
      	si bInfo alors
      	
      		// Si aucun événement n'a été importé
      		SI nNbEvénements = 0 ALORS
      			Avertissement("Cet agenda ne contient aucun événement")
      		SINON
      			
      			sLibEvénement = (nNbEvénements = 1 ? "événement a été importé" SINON "événements ont été importés")			
      			Info("[%nNbEvénements%] [%sLibEvénement%]")
      		FIN
      	fin
      	
     type : 458752
   -
     name : OutlookListeProfils
     internal_properties : CAAAAAgAAABMZbzOui8Byfyg/4Zx4n6EwBvYoLaKvDeYD5mhY6GQHsVC8YnYz3bT7oh63bHIm7HDoarBGlUVpWVRDpgTpOme0llByFJMEdV9GKjdFkEiL3n6DqFchfyOw9J/ib+T9nPTDyKEw61CrafyY82ct9L/aWX5oR6iuR4R7p/0N7xSi4GrlzPJoGSaNErvtNZBpRjevgKqjNnlndjfm9ALywUU9wc0uo+0f0PwTLe0YuqCfGy+FmqjI8sygLUPG+fbori/CfnCjHxH0f9G1P8=
     procedure_id : 1946295319593617323
     type_code : 15
     code : |1-
      // Résumé : Récupère la liste des profils Outlook disponibles
      PROCEDURE OutlookListeProfils()
      
      	sListe 		est une chaine
      	bApp64		est un booléen = EnMode64bits()
      	bOutlook64	est un booléen = Outlook64Bits()
      	
      	
      	/////
      	// ATTENTION :
      	// Si l'application est en 32bits et si Outlook est en 64bits : il est impossible de récupérer la liste des profils (MAPI n'est pas compatible 32/64)
      	// Si l'application est en 64bits et si Outlook est en 32bits : il est impossible de récupérer la liste des profils (MAPI n'est pas compatible 32/64)
      	/////
      	
      	Si (bOutlook64 et bApp64) _ou_ (Pas bOutlook64 et pas bApp64) alors
      	
      		// Récupère la liste des profils Outlook
      		sListe = wl.OutlookListeProfil()
      	sinon
      
      		si ErreurDétectée alors
      			ErreurDéclenche(1, erreurinfo(errmessage))
      		sinon
      			ErreurDéclenche(1, ChaîneConstruit("La version installée de Outlook (%1) n'est pas compatible avec l'application (%2)", (bOutlook64 ? "64bits" SINON "32bits"), (bApp64 ? "64bits" SINON "32bits")))	
      		FIN
      	fin
      		
      renvoyer sListe
     type : 458752
   -
     name : NotesImporteAgenda
     internal_properties : CAAAAAgAAADaVcYQMCZEsQiY16HmpPu+uYaeCvYxPSY6nFTBMUpK2wyJKzpJNNDp4qoWWO5Yqe7qEoYDFgiV87IOPYYcztRh2drIDEgIf06gKPLzO8CP9DWaihwsIQ4ty/hD435j81oa6Yr6M7Q48yfSrY4X9wr3EFZs3etcR9yHTFuXXMy8cUHjG1ladZx5ZwSmbqPn0uSG1GcGGbI=
     procedure_id : 1946302045516000460
     type_code : 15
     code : |1-
      // Résumé : Importe les événements d'un agenda Lotus Notes
      PROCEDURE NotesImporteAgenda(local nIDAgenda est un entier, local bInfo est un booléen = vrai)
      
      	nIDConnexion 	est un entier
      	nIDSession	 	est un entier
      	nNbEvénements	est un entier
      	sLibEvénement	est une chaine
      	nRetour			est un entier
      	sIDRendezVous	est une chaine
      	__IDNOTES__		est un entier
      	
      	sablier(vrai)
      
      	// Positionne sur l'agenda
      	HLitRecherchePremier(AgendaNotes, IDAgendaNotes, nIDAgenda)
      	si htrouve(AgendaNotes) ALORS
      		
      		// Si on a précisé un certificat ou non
      		si agendanotes.Certificat = "" alors
      			nIDConnexion = NotesOuvreConnexion(agendanotes.MotDePasse, AgendaNotes.Serveur)
      		sinon
      			nIDConnexion = NotesOuvreConnexion(AgendaNotes.MotDePasse, AgendaNotes.Serveur, agendanotes.Certificat)
      		fin
      		
      		// Spécifie la base
      		si agendanotes.Base <> "" ALORS
      			
      			// Ouvre la base
      			nIDSession = NotesOuvreBase(nIDConnexion, agendanotes.Base)
      			__IDNOTES__ = nIDSession
      		sinon
      			__IDNOTES__ = nIDConnexion
      		FIN
      		
      		// Parcourt les rendez-vous
      		SI RendezVousPremier(__IDNOTES__) ALORS
      			
      			tantque mRendezVous.EnDehors = faux 
      						
      				sIDRendezVous = mRendezVous.ID
      				
      				// Vérifie si on a déjà importé cet événement
      				HLitRecherchePremier(AgendaEvénement, IdentifiantNotes, sIDRendezVous)
      				SI HTrouve(AgendaEvénement) ALORS
      										
      					// On vérifie si un conflit de modification existe
      					nRetour = DéclencheConflitExtérieur(depuisNotes)
      					
      					// On annule l'import
      					// L'événement sera reproposé à la prochaine synchronisation
      					SI nRetour = cftAnnulerImport ALORS
      						
      						// Rendez-vous suivant, sans modification
      						RendezVousSuivant(__IDNOTES__)		
      						CONTINUER
      					SINON
      						
      						// On conserve les données présentes dans la base
      						SI nRetour = cftConserveDonnéesActuelles ALORS
      							
      							// mRendezVous a été modifié par la fenêtre FEN_CONFLIT						
      							// Enregistre les modifications apportées dans Notes
      							RendezVousModifie(__IDNOTES__)	
      						SINON
      							// Applique les nouvelles données présentes dans Notes
      						FIN
      						
      						// On doit modifier l'événement
      						AgendaEvénement.Invités = ""
      					FIN
      				SINON
      					
      					// RAZ des données
      					HRAZ(AgendaEvénement)
      				FIN
      				
      				// Importe les données de l'événement
      				AgendaEvénement.Auteur 				= ""
      				AgendaEvénement.Contenu				= mRendezVous.Notes
      				AgendaEvénement.DateDébut			= mRendezVous.DateDébut
      				AgendaEvénement.DateFin				= mRendezVous.DateFin
      				AgendaEvénement.IDAgendaNotes		= nIDAgenda
      				AgendaEvénement.Lieux				= mRendezVous.Lieu
      				AgendaEvénement.Titre				= mRendezVous.Objet
      				AgendaEvénement.IDCatégorie			= CatégorieImporte(mRendezVous.Catégorie)
      				AgendaEvénement.IdentifiantNotes	= sIDRendezVous
      				AgendaEvénement.JournéeEntière		= mRendezVous.JournéeEntière
      				
      				// Participants
      				POUR i = 1 _a_ mrendezvous.NbParticipant
      					AgendaEvénement.Invités += [RC] + Remplace(Remplace(mRendezVous.Participant[i], "<", TAB), ">", "")
      				FIN
      				
      				// Enregistre l'événement
      				si AgendaEvénement..NouvelEnregistrement alors
      					HAjoute(AgendaEvénement)
      				sinon
      					HDésactiveTrigger()
      					HModifie(AgendaEvénement)
      					HActiveTrigger()
      				fin
      				
      				// Incrémente le compteur
      				nNbEvénements ++
      				
      				// Rendez-vous suivant
      				RendezVousSuivant(__IDNOTES__)		
      			fin
      			
      		FIN
      		
      		// Fermeture de la connexion
      		si nIDSession <> 0 alors NotesFermeBase(nIDSession)
      		FermeSession(nIDConnexion)
      		
      	FIN	
      
      	Sablier(Faux)
      	
      	si bInfo alors
      	
      		// Si aucun événement n'a été importé
      		SI nNbEvénements = 0 ALORS
      			Avertissement("Ce profil ne contient aucun événement")
      		SINON
      			sLibEvénement = (nNbEvénements = 1 ? "événement a été importé" SINON "événements ont été importés")			
      			Info("[%nNbEvénements%] [%sLibEvénement%]")
      		FIN
      	fin
     type : 458752
   -
     name : DéclencheConflitExtérieur
     internal_properties : CAAAAAgAAABm1uNH2p1tnVgrJlRZHCXGVYhr4uqZ612cnMC0n4+mn+5mtp7Nflww9mSVQhJPY0mgMc+KBRk5XNNmcqRcXmL0x7OotUTtGaVkU/U5N583j8A7LPhUz1Dvj/w3v8Qt6YwG7Qa2mw7+OUn0PzDRU5A5pIII0Q9AR9yRDh3VEjqWTyqEtlYnVHnUgu+xZ/qG34Iiwqgd0DjqoE1k2vzH1lQ+sBxYiJgB
     procedure_id : 1946714396729138608
     type_code : 15
     code : |1-
      // Résumé : Déclenche un conflit de modification
      PROCEDURE DéclencheConflitExtérieur(local nOrigine est un entier, UnEvénement est un gglEvénement dynamique = null)
      
      	nRetour est un entier
      
      	selon nOrigine
      		
      		// Depuis Outlook et Notes, on doit lire la variable mRendezVous
      		cas depuisOutlook, depuisNotes
      			
      			// Ouvre la fenêtre de conflit
      			nRetour = ouvre(FEN_Conflit, cftModeModification, nOrigine)
      						
      			RENVOYER nRetour
      			
      		// Depuis Google, on doit lire l'objet gglEvénement
      		cas depuisGoogle
      						
      			// Ouvre la fenêtre de conflit
      			nRetour = Ouvre(FEN_Conflit, cftModeModification, nOrigine, UnEvénement)
      			
      			RENVOYER nRetour
      			
      	FIN
      	
      RENVOYER Vrai
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_Collection1
resources :
 string_res :
  identifier : 0x1fbe21d8002e5c6a
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
